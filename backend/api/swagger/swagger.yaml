swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:9000
# basePath prefixes all resource paths 
basePath: /api/story
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /login:
    x-swagger-router-controller: controller
    post:
      operationId: v1_login
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/Login_instance"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_user"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /me:
    x-swagger-router-controller: controller
    get:
      operationId: v1_currentUser
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_user"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /signUp:
    x-swagger-router-controller: controller
    post:
      operationId: v1_createUser
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/create_user"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_user"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: controller
    get:
      operationId: v1_userList
      parameters:
        - name: filter
          in: query
          type: string
        - name: page
          in: query
          type: integer
        - name: count
          in: query
          type: integer
        - name: sort
          in: query
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_user"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /createStory:
    x-swagger-router-controller: controller
    post:
      operationId: v1_createStory
      parameters:
        - name: data
          in: body
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_story"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_story"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /listStory:
     x-swagger-router-controller: controller
     get:
      operationId: v1_listStory
      parameters:
        - name: filter
          in: query
          type: string
        - name: page
          in: query
          type: integer
        - name: count
          in: query
          type: integer
        - name: sort
          in: query
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/create_story"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Login_instance:
    required:
      - username
      - password
    properties:
      username: {type: string}
      password: {type: string}
  create_user:
    properties:
      username: {type: string}
      password: {type: string}
  create_story:
    properties:
      content: {type: string}
      creator: {type: string}
      title: {type: string}
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
